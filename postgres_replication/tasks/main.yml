---
# tasks file for postgres_replication
# Installing python packages for psql modules
  - name: install base tools python3
    dnf:
      name:
        - python3-pexpect.noarch
        - python3-psycopg2
      state: present
      update_cache: true

#CREATE USER replicator WITH REPLICATION Encrypted PASSWORD 'Otus2022!';
  - name: Create replicator user
    become_user: postgres
    postgresql_user:
      name: replication
      password: '{{ replicator_password }}'
      role_attr_flags: REPLICATION 
    ignore_errors: true
    when: (ansible_hostname == "node1")

  #Stopping postgresql-16 on the node2 host
  - name: stop postgresql-server on node2
    service: 
      name: postgresql-16
      state: stopped
    when: (ansible_hostname == "node2")

  #Copying the configuration file postgresql.conf
  - name: copy postgresql.conf
    template:
      src: postgresql.conf.j2
      dest: /var/lib/pgsql/16/data/postgresql.conf
      owner: postgres
      group: postgres
      mode: '0600'
    when: (ansible_hostname == "node1")
  
  #Copying the configuration file pg_hba.conf
  - name: copy pg_hba.conf
    template:
      src: pg_hba.conf.j2
      dest: /var/lib/pgsql/16/data/pg_hba.conf
      owner: postgres
      group: postgres
      mode: '0600'
    when: (ansible_hostname == "node1")
   #restart  postgresql-16
  - name: restart postgresql-server on node1
    shell: systemctl restart postgresql-16
    when: (ansible_hostname == "node1")

  #delete the contents of the directory /var/lib/pgsql/16/data/
  - name: Remove files from data catalog
    file:
      path: /var/lib/pgsql/16/data/
      state: absent
    when: (ansible_hostname == "node2")

  #Copying data from node1 to node2
  - name: copy files from master to slave
    become_user: postgres
    expect:
      command: 'pg_basebackup -h {{ master_ip }} -U  replication -p 5432 -D /var/lib/pgsql/16/data/ -R -P'
      responses: 
        '.*Password*': "{{ replicator_password }}"
    when: (ansible_hostname == "node2")

  #Copying the configuration file postgresql.conf
  - name: copy postgresql.conf
    template:
      src: postgresql2.conf.j2
      dest: /var/lib/pgsql/16/data/postgresql.conf
      owner: postgres
      group: postgres
      mode: '0600'
    when: (ansible_hostname == "node2")

  #Copying the configuration file pg_hba.conf
  - name: copy pg_hba.conf
    template:
      src: pg_hba.conf.j2
      dest: /var/lib/pgsql/16/data/pg_hba.conf
      owner: postgres
      group: postgres
      mode: '0600'
    when: (ansible_hostname == "node2")
   
  #Starting the postgresql-16 service on the host node2
  - name: start postgresql-server on node2
    service: 
      name: postgresql-16
      state: started
    when: (ansible_hostname == "node2")
